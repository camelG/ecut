<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1" metadata-complete="true" id="WebApp_1500170678024">
	<display-name>ecut.demo.project</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
            classpath:/spring/applicationContext.xml
        </param-value>
	</context-param>
	<context-param>
		<param-name>defaultHtmlEscape</param-name>
		<param-value>true</param-value>
	</context-param>

	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/applicationContext.xml</param-value>
			<!-- <param-value>classpath:spring/spring-*.xml</param-value> -->
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- Spring的字符集过滤通过用于处理项目中的乱码问题，该过滤器位于org.springframework.web.filter包中， 
		encoding：字符集，即将过滤到的request的字符集设置为encoding指定的值，如UTF-8等，相当于： request.setCharacterEncoding 
		forceEncoding：字面意思是强制字符集，但你大可不必按字面意思理解，因为这个参数的值只不过是指定response的字符集是否也设置成 encoding所指定的字符集，所以你可以选择设置为true或false，当值为true时，相当于 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<span style="white-space:pre">
		</span>
		<filter-name>encodingFilter</filter-name>
		<span style="white-space:pre">
		</span>
		<url-pattern>/*</url-pattern>
		<span style="white-space:pre">
		</span>
	</filter-mapping>

	<!-- ContextLoaderListener监听器的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。 
		因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法 。至于ApplicationContext.xml这个配置文件部署在哪，如何配置多个xml文件 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<!-- 它是一个在web应用关闭的时候,清除JavaBeans Introspector的监听器.在web.xml中注册这个listener.可以保证在web 
		应用关闭的时候释放与掉这个web 应用相关的class loader 和由它管理的类 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

<!-- 	<listener>
		<listener-class>com.eigpay.framework.admin.webapp.listener.SpringContextListener</listener-class>
	</listener> -->

</web-app>
